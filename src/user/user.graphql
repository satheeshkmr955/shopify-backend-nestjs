scalar DateTime

type PaginationInfo {
  take: Int!
  after: String
  hasNextPage: Boolean!
}

input PaginateInput {
  take: Int
  after: String
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  twoFASecret: String
  enable2FA: Boolean!
  playlists: [Playlist!]!
  createdAt: DateTime!
  updatedAt: DateTime!

  accessToken: String
}

type PaginatedUsers {
  items: [User!]!
  pagination: PaginationInfo!
}

type Query {
  profile: User
  user(input: IDInput!): User
  users(input: PaginateInput): PaginatedUsers!
}

type Mutation {
  updateUser(input: UpdateUserInput!): User!
  deleteUser(input: IDInput!): User!
}

input IDInput {
  id: ID!
}

input UpdateUserInput {
  id: ID!
  firstName: String
  lastName: String
  twoFASecret: String
  enable2FA: Boolean
  playlists: [String!]
}
